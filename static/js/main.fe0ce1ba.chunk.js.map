{"version":3,"sources":["logo.svg","Count.js","Button.js","UserList.js","Counter.js","Accordion.js","FakeLoading.js","Notification.js","StopWatch.js","Resizer.js","GithubUsers.js","RandomAdvice.js","PrentRandom.js","SearchingAdvice.js","Form.js","ToDo.js","DeckofCards.js","ShuffleTheCards.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Count","props","couCou","Button","onClick","name","callIt","Users","React","Component","state","styled","letColored","setState","removeItem","this","userslist","map","item","index","key","id","className","GithubUsers","error","isLoaded","items","fetch","then","res","json","result","console","log","message","login","src","avatar_url","RandomAdvice","data","response","slip","advice","TextArea","value","defaultValue","onChange","e","target","placeholder","Checkbox","onToggle","prevState","style","display","marginBottom","checked","type","Radio","Select","options","option","label","defaultProps","dataTodo","FormTodo","valueInp","valueTarea","valueRan","handleChangeInp","event","handleChangeTarea","handleChangeRan","addData","push","min","max","TodoList","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fe0ce1ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\n\r\nconst Count = (props) => {\r\n  return <div>{props.couCou}</div>;\r\n};\r\n\r\nexport default Count;\r\n","import React from \"react\";\r\nimport Counter from \"./Counter\";\r\n\r\nconst Button = (props) => {\r\n  return <button onClick={props.name}>{props.callIt}</button>;\r\n  //   return props.name === \"increment\" ? (\r\n  //     <button onClick={Counter.increment}>+</button>\r\n  //   ) : (\r\n  //     <button onClick={Counter.decrement}>-</button>\r\n  //   );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nclass Users extends React.Component {\r\n  state = {\r\n    styled: false,\r\n  };\r\n\r\n  letColored = () => {\r\n    this.setState({\r\n      styled: true,\r\n    });\r\n  };\r\n  removeItem = () => {};\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {this.props.userslist.map((item, index) => (\r\n            <li key={item.id} className=\"usersBox\">\r\n              <div\r\n              // onClick={this.letColored}\r\n              // style={{\r\n              //   background: this.state.styled == false ? null : \"red\",\r\n              // }}\r\n              >\r\n                {index + 1} -- {item.name}\r\n                <button onClick={this.removeItem}>remove</button>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass UserList extends React.Component {\r\n  state = {\r\n    validId: this.props.initialUsers.length + 1,\r\n    validName: \"\",\r\n    count: 0,\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      validName: event.target.value,\r\n    });\r\n    console.log(event.target.value);\r\n    // console.log(this.state.validId);\r\n  };\r\n\r\n  addNewUserToBottom = () => {\r\n    this.setState({\r\n      validId: this.state.validId + 1,\r\n    });\r\n    this.setState((state) => ({\r\n      count: state.count + 1,\r\n    }));\r\n    this.props.initialUsers.push({\r\n      name: this.state.validName,\r\n      id: this.state.validId,\r\n    });\r\n  };\r\n\r\n  addNewUserToTop = () => {\r\n    this.setState({\r\n      validId: this.state.validId + 1,\r\n    });\r\n    this.setState((state) => ({\r\n      count: state.count + 1,\r\n    }));\r\n    this.props.initialUsers.unshift({\r\n      name: this.state.validName,\r\n      id: this.state.validId,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input onChange={this.handleChange}></input>\r\n        <button onClick={this.addNewUserToBottom}>add to bottom</button>\r\n        <button onClick={this.addNewUserToTop}>add to top</button>\r\n        <Users key={this.state.count} userslist={this.props.initialUsers} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport Count from \"./Count\";\r\nimport Button from \"./Button\";\r\n\r\nclass Counter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: props.initialCount,\r\n    };\r\n  }\r\n  increment = () => {\r\n    this.setState({\r\n      count: this.state.count + this.props.step,\r\n    });\r\n  };\r\n  decrement = () => {\r\n    this.setState({\r\n      count: this.state.count - this.props.step,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Count couCou={this.state.count} />\r\n        <Button name={this.increment} callIt=\"+\" />\r\n        <Button name={this.decrement} callIt=\"-\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React from \"react\";\r\n\r\nclass Accordion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: null,\r\n      expanded: false,\r\n      textBut: \"show\",\r\n    };\r\n  }\r\n  showText = () => {\r\n    this.state.expanded == false\r\n      ? this.setState({\r\n          expanded: true,\r\n          content: this.props.children,\r\n          textBut: \"hide\",\r\n        })\r\n      : this.setState({\r\n          expanded: false,\r\n          content: null,\r\n          textBut: \"show\",\r\n        });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"accord\" onClick={this.showText}>\r\n          {this.state.textBut}\r\n        </div>\r\n        <div>{this.state.content}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Accordion;\r\n","import React from \"react\";\r\n\r\nclass FackeLoading extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoad: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.changeLoader();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.intervalId);\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    if (this.state.isLoad && this.state.isLoad !== prevState.isLoad) {\r\n      this.changeLoader();\r\n    }\r\n  }\r\n\r\n  changeLoader = () => {\r\n    this.intervalId = setTimeout(() => {\r\n      this.setState({\r\n        isLoad: true,\r\n      });\r\n    }, this.props.delay);\r\n  };\r\n\r\n  againChange = () => {\r\n    this.setState({\r\n      isLoad: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isLoad == true ? (\r\n          <button onClick={this.againChange}>Try Again</button>\r\n        ) : null}\r\n        <div>\r\n          {this.state.isLoad == false ? \"Loading...\" : this.props.message}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FackeLoading;\r\n","import React from \"react\";\r\n\r\nclass Notification extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"\",\r\n      isLoad: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.changeLoading();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.changes);\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    if (this.state.isLoad && this.state.isLoad !== prevState.isLoad) {\r\n      this.changeLoading();\r\n    }\r\n  }\r\n\r\n  changeLoading = () => {\r\n    this.changes = setTimeout(() => {\r\n      this.setState({\r\n        isLoad: false,\r\n      });\r\n    }, this.props.delay);\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ value: event.target.value });\r\n    console.log(event.target.value);\r\n  };\r\n  againChangeLoading = () => {\r\n    this.setState({\r\n      isLoad: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"dfhgzdfjv\"\r\n          value={this.state.value}\r\n          onChange={this.handleChange}\r\n        />\r\n        <br />\r\n        <div>\r\n          {this.state.isLoad === false ? (\r\n            <button onClick={this.againChangeLoading}>Show notification</button>\r\n          ) : (\r\n            <div>{this.state.value}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nclass StopWatch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      count: 0,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.counterId();\r\n  }\r\n\r\n  counterId = () => {\r\n    this.countic = setInterval(() => {\r\n      this.setState({\r\n        count: this.state.count + 1,\r\n      });\r\n    }, 1000);\r\n  };\r\n  restartCounter = () => {\r\n    this.setState({\r\n      count: 0,\r\n    });\r\n  };\r\n  stopCount = () => {\r\n    clearInterval(this.countic);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>{this.state.count + \"s\"}</div>\r\n        <button onClick={this.counterId}>start</button>\r\n        <button onClick={this.restartCounter}>restart</button>\r\n        <button onClick={this.stopCount}>stop</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StopWatch;\r\n","import React from \"react\";\r\n\r\nclass Resizer extends React.Component {\r\n  state = {\r\n    ratio: 0.15,\r\n    width: 0,\r\n    myWidth: 200,\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.onResize);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.onResize);\r\n  }\r\n\r\n  onResize = (e) => {\r\n    this.setState({\r\n      width: e.target.innerWidth,\r\n      myWidth: this.state.width * this.state.ratio,\r\n    });\r\n  };\r\n  changeRatio = (e) => {\r\n    this.setState({\r\n      ratio: e.target.value,\r\n    });\r\n    console.log(e.target.value);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"number\"\r\n          min={0.1}\r\n          step={0.05}\r\n          max={1}\r\n          //   value={0.15}\r\n          onChange={this.changeRatio}\r\n        ></input>\r\n        <br />\r\n        <br />\r\n        <div\r\n          style={{\r\n            height: \"100px\",\r\n            width: this.state.myWidth,\r\n            background: \"#61dafb\",\r\n            fontSize: \"15px\",\r\n          }}\r\n        >\r\n          Window width:{this.state.width}\r\n          <br />\r\n          My width:{this.state.myWidth}\r\n          <br />\r\n          My ratio:{this.state.ratio}\r\n        </div>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resizer;\r\n","import React from \"react\";\r\n\r\nclass GithubUsers extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://api.github.com/users\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result,\r\n          });\r\n          console.log(this.state.items);\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <ul className=\"usersBoxContent\">\r\n          {this.state.items.map((item) => (\r\n            <li key={item.id} className=\"usersBox\">\r\n              <div>\r\n                <div>{item.login}</div>\r\n                <img src={item.avatar_url} className=\"avatarPic\" />\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default GithubUsers;\r\n","import React from \"react\";\r\n\r\nclass RandomAdvice extends React.Component {\r\n  state = {\r\n    data: null,\r\n  };\r\n  async componentDidMount() {\r\n    const response = await fetch(\"https://api.adviceslip.com/advice\");\r\n\r\n    const { slip } = await response.json();\r\n\r\n    this.setState({\r\n      data: slip,\r\n    });\r\n    console.log(slip);\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    if (data === null) {\r\n      return <div>Loading</div>;\r\n    }\r\n\r\n    return (\r\n      <section className=\"border py-5\">\r\n        <h1 className=\"lead\">Advice</h1>\r\n        <blockquote className=\"blockquote text-right\">\r\n          <p className=\"mb-0\">{data.advice}</p>\r\n        </blockquote>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RandomAdvice;\r\n","import React from \"react\";\r\nimport RandomAdvice from \"./RandomAdvice\";\r\n\r\nclass ParentRandom extends React.Component {\r\n  state = {\r\n    count: 0,\r\n  };\r\n  buttonOnClick = () => {\r\n    this.setState((state) => ({\r\n      count: state.count + 1,\r\n    }));\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={this.buttonOnClick}>\r\n          Refresh Advice\r\n        </button>\r\n        <RandomAdvice key={this.state.count} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ParentRandom;\r\n","import React from \"react\";\r\n\r\nclass SearchingAdvice extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    console.log(event.target.value);\r\n\r\n    fetch(`https://api.adviceslip.com/advice/search/${event.target.value}`)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        throw res.status;\r\n      })\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result,\r\n          });\r\n          console.log(result.total_results);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          {error ? (\r\n            <div>Error: {error.message}</div>\r\n          ) : !isLoaded ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <div>\r\n              <button>Clear</button>\r\n              <div>total_results: {this.state.items.total_results}</div>\r\n              <div>query: {this.state.items.query}</div>\r\n              <div>\r\n                {this.state.items.query ? (\r\n                  <ul>\r\n                    {this.state.items.slips.map((item) => (\r\n                      <li key={item.id} className=\"usersBox\">\r\n                        <div>\r\n                          {item.advice}--{item.date}\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                ) : (\r\n                  <div>No advice slips found matching that search term</div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchingAdvice;\r\n","import React from \"react\";\r\n\r\nclass TextArea extends React.Component {\r\n  state = {\r\n    value: this.props.defaultValue,\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ value: e.target.value }, () => {\r\n      this.props.onChange(this.state.value, this.props.name);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <textarea\r\n          value={value}\r\n          onChange={this.onChange}\r\n          placeholder={this.props.name}\r\n          name={this.props.name}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// class Input extends React.Component {\r\n//   state = {\r\n//     value: this.props.defaultValue,\r\n//   };\r\n//   onChange = (e) => {\r\n//     this.setState({ value: e.target.value }, () => {\r\n//       this.props.onChange(this.state.value, this.props.name);\r\n//     });\r\n//   };\r\n\r\n//   render() {\r\n//     const { value } = this.state;\r\n\r\n//     return (\r\n//       <div>\r\n//         <input\r\n//           value={value}\r\n//           onChange={this.onChange}\r\n//           placeholder={this.props.name}\r\n//           name={this.props.name}\r\n//           type=\"text\"\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// const Input = (event) => {\r\n//   onChange = (event) => {\r\n//     console.log(event.target.value);\r\n//   };\r\n//   return <div>{this.event.target.value}</div>;\r\n// };\r\n\r\nclass Checkbox extends React.Component {\r\n  state = {\r\n    value: false,\r\n  };\r\n  onToggle = () => {\r\n    this.setState(\r\n      (prevState) => ({ value: !prevState.value }),\r\n      () => {\r\n        this.props.onChange(this.state.value, this.props.name);\r\n      }\r\n    );\r\n  };\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <label style={{ display: \"block\", marginBottom: 10 }}>\r\n        checkbox\r\n        <input\r\n          checked={value}\r\n          onChange={this.onToggle}\r\n          name={this.props.name}\r\n          type=\"checkbox\"\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nclass Radio extends React.Component {\r\n  state = {\r\n    value: false,\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ value: e.target.value }, () => {\r\n      this.props.onChange(this.state.value, this.props.name);\r\n    });\r\n  };\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <label style={{ display: \"block\", marginBottom: 10 }}>\r\n        radio {this.props.name}\r\n        <input\r\n          checked={value}\r\n          value={this.props.value}\r\n          onChange={this.onChange}\r\n          name={this.props.name}\r\n          type=\"radio\"\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n}\r\n\r\nclass Select extends React.Component {\r\n  static defaultProps = {\r\n    options: [],\r\n  };\r\n\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ value: e.target.value }, () => {\r\n      this.props.onChange(this.state.value, this.props.name);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { state } = this.state;\r\n    return (\r\n      <select value={state} onChange={this.onChange} name={this.props.name}>\r\n        {this.props.options.map((option) => (\r\n          <option value={option.value}>{option.label}</option>\r\n        ))}\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nclass Form extends React.Component {\r\n  state = {};\r\n  onChange = (value, name) => {\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (Object.keys(this.state).length) {\r\n      this.props.onSubmit(this.state);\r\n    } else {\r\n      console.log(\"not valid\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(\"this\", this.state);\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <legend>My Form</legend>\r\n        <Checkbox onChange={this.onChange} name=\"chcekbox\" />\r\n        <Radio value=\"Hello\" onChange={this.onChange} name=\"radio\" />\r\n        <Radio value=\"Bye\" onChange={this.onChange} name=\"radio\" />\r\n        {/* <Input defaultValue=\"input\" onChange={this.onChange} name=\"title\" /> */}\r\n        <TextArea\r\n          defaultValue=\"Description\"\r\n          name=\"textarea\"\r\n          onChange={this.onChange}\r\n        />\r\n        <Select\r\n          name=\"select\"\r\n          onChange={this.onChange}\r\n          options={[\r\n            { value: 1, label: \"JS\" },\r\n            { value: 2, label: \"React\" },\r\n          ]}\r\n        />\r\n        <button style={{ display: \"block\", marginTop: 10 }}>Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst dataTodo = [];\r\n\r\nclass FormTodo extends React.Component {\r\n  state = {\r\n    valueInp: \"\",\r\n    valueTarea: \"\",\r\n    valueRan: \"\",\r\n    id: 0,\r\n  };\r\n\r\n  handleChangeInp = (event) => {\r\n    this.setState({ valueInp: event.target.value });\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  handleChangeTarea = (event) => {\r\n    this.setState({ valueTarea: event.target.value });\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  handleChangeRan = (event) => {\r\n    this.setState({ valueRan: event.target.value });\r\n    console.log(event.target.value);\r\n  };\r\n\r\n  addData = () => {\r\n    console.log(this.state);\r\n    dataTodo.push(this.state);\r\n    this.setState({\r\n      valueInp: \"\",\r\n      valueTarea: \"\",\r\n      valueRan: \"\",\r\n      id: this.state.id + 1,\r\n    });\r\n    console.log(dataTodo);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>name:</div>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.valueInp}\r\n          onChange={this.handleChangeInp}\r\n        />\r\n        <div> description:</div>\r\n        <textarea\r\n          value={this.state.valueTarea}\r\n          onChange={this.handleChangeTarea}\r\n        />\r\n        <div>duration:</div>\r\n        <input\r\n          type=\"range\"\r\n          min={1}\r\n          max={3}\r\n          value={this.state.valueRan}\r\n          onChange={this.handleChangeRan}\r\n        />\r\n        <br />\r\n        <button type=\"submit\" onClick={this.addData}>\r\n          add\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass TodoList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {this.props.dataTodo.map((item) => (\r\n            <li key={item.id}>\r\n              <div>\r\n                {item.valueInp} -- {item.valueTarea} -- {item.valueRan}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass ToDo extends React.Component {\r\n  state = {\r\n    count: 0,\r\n  };\r\n  showMe = () => {\r\n    this.setState((state) => ({\r\n      count: state.count + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <FormTodo />\r\n        <TodoList dataTodo={dataTodo} key={this.state.count} />\r\n        <button onClick={this.showMe}>go</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToDo;\r\n","import React from \"react\";\r\n\r\nclass DeckofCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      count: 0,\r\n      value: \"\",\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    console.log(event.target.value);\r\n    this.setState((state) => ({\r\n      count: state.count + 1,\r\n    }));\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n    console.log(this.state.value);\r\n\r\n    fetch(\r\n      `https://deckofcardsapi.com/api/deck/new/draw/?count=${event.target.value}`\r\n    )\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        throw res.status;\r\n      })\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          console.log(result.cards);\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"range\"\r\n            min={1}\r\n            max={10}\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          />\r\n          {this.state.value}\r\n        </div>\r\n        <div>\r\n          {error ? (\r\n            <div>Error</div>\r\n          ) : !isLoaded ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <div key={this.state.count}>\r\n              <ul>\r\n                {this.state.items.cards.map((item, index) => (\r\n                  <li key={index} className=\"usersBox\">\r\n                    <div>\r\n                      <img src={item.image} className=\"avatarPic\" />\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeckofCard;\r\n","import React from \"react\";\r\n\r\nclass ShuffleTheCards extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      count: 0,\r\n      value: \"\",\r\n      shuffling: \"true\",\r\n    };\r\n  }\r\n\r\n  shuffleMe = () => {\r\n    this.setState({\r\n      shuffling: \"true\",\r\n    });\r\n    console.log(this.state.shuffling);\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    console.log(event.target.value);\r\n    this.setState((state) => ({\r\n      count: state.count + 1,\r\n    }));\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n    console.log(this.state.value);\r\n\r\n    fetch(\r\n      `https://deckofcardsapi.com/api/deck/new/draw/?count=${event.target.value}`\r\n    )\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n\r\n        throw res.status;\r\n      })\r\n      .then(\r\n        (result) => {\r\n          console.log(result);\r\n          console.log(result.cards);\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <input\r\n            type=\"range\"\r\n            min={1}\r\n            max={10}\r\n            value={this.state.value}\r\n            onChange={this.handleChange}\r\n          />\r\n          {this.state.value}\r\n          <br />\r\n          <button onClick={this.shuffleMe}>Shuffle </button>\r\n        </div>\r\n        <div>\r\n          {error ? (\r\n            <div>Error</div>\r\n          ) : !isLoaded ? (\r\n            <div>Loading...</div>\r\n          ) : (\r\n            <div key={this.state.count}>\r\n              <ul>\r\n                {this.state.items.cards.map((item, index) => (\r\n                  <li key={index} className=\"usersBox\">\r\n                    <div>\r\n                      <img src={item.image} className=\"avatarPic\" />\r\n                    </div>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShuffleTheCards;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Input from \"./Input.js\";\nimport Paragraph from \"./Paragraph.js\";\nimport Avatar from \"./Avatar.js\";\nimport Greeting from \"./Greeting\";\nimport AgeDetector from \"./AgeDetector\";\nimport Counter from \"./Counter\";\nimport Count from \"./Count\";\nimport Button from \"./Button\";\nimport Accordion from \"./Accordion\";\nimport FackeLoading from \"./FakeLoading\";\nimport Notification from \"./Notification\";\nimport StopWatch from \"./StopWatch\";\nimport Resizer from \"./Resizer\";\nimport UserList from \"./UserList\";\nimport GithubUsers from \"./GithubUsers\";\nimport RandomAdvice from \"./RandomAdvice\";\nimport ParentRandom from \"./PrentRandom\";\nimport SearchingAdvice from \"./SearchingAdvice\";\nimport Form from \"./Form\";\nimport ToDo from \"./ToDo\";\nimport DeckofCards from \"./DeckofCards\";\nimport ShuffleTheCards from \"./ShuffleTheCards\";\n\nconst users = [\n  {\n    name: \"Alex\",\n    id: 1,\n  },\n  {\n    name: \"John\",\n    id: 2,\n  },\n  {\n    name: \"Bob\",\n    id: 3,\n  },\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <a */}\n        {/* className=\"App-link\" */}\n        {/* href=\"https://reactjs.org\" */}\n        {/* target=\"_blank\" */}\n        {/* rel=\"noopener noreferrer\" */}\n        {/* > */}\n        {/* Learn React */}\n        {/* </a> */}\n        {/* <Input /> */}\n        {/* <Paragraph /> */}\n        {/* <Accordion expanded={false}> */}\n        {/* <div>Hidden text</div> */}\n        {/* </Accordion> */}\n        {/* <Avatar /> */}\n        {/* <Greeting name=\"Petia\" /> */}\n        {/* <AgeDetector age={560} /> */}\n        {/* <Counter step={3} initialCount={1000} /> */}\n        {/* <h2>Facke Loading</h2> */}\n        {/* <FackeLoading delay={3000} message=\"sucсsesы\" /> */}\n        {/* <h2>Notification</h2> */}\n        {/* <Notification delay={3000}></Notification> */}\n        {/* <h2>StopWatch</h2> */}\n        {/* <StopWatch /> */}\n        {/* <h2>Resizer</h2> */}\n        {/* <Resizer ratio={0.15} /> */}\n        {/* <h2>UserList</h2> */}\n        {/* <UserList initialUsers={users} /> */}\n        {/* <h2>RandomAdvice</h2> */}\n        {/* <ParentRandom /> */}\n        <h2>GithubUsers</h2>\n        <GithubUsers />\n        {/* <h2>Searching advice</h2> */}\n        {/* <SearchingAdvice /> */}\n        {/* <Form /> */}\n        {/* <h3>ToDo</h3> */}\n        {/* <ToDo /> */}\n        {/* <h3>DeckofCards</h3> */}\n        {/* <DeckofCards /> */}\n        {/* <h3>Shuffle The Cards</h3> */}\n        {/* <ShuffleTheCards /> */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}